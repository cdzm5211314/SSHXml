<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 整合方式一:Spring零障碍整合Hibernate,是管理SessionFactory,直接加载Hibernate的配置文件 -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
	<!-- 直接加载Hibernate的配置文件 -->
	<!-- <property name="configLocation" value="classpath:hibernate.cfg.xml"></property> -->
	<!-- </bean> -->

	<!-- 整合方式二:Spring整合Hibernate,是将Hibernate的参数配置到Spring中 -->
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 配置Hibernate 数据库参数通过DataSource配置 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置Hibernate 的其他常用可选参数 hibernate.(不能省略) -->
		<property name="hibernateProperties">
			<!-- <props> -->
			<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> -->
			<!-- <prop key="hibernate.hbm2ddl">update</prop> -->
			<!-- <prop key="hibernate.show_sql">true</prop> -->
			<!-- <prop key="hibernate.format_sql">true</prop> -->
			<!-- </props> -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
		<!-- 加载hbm映射文件 -->
		<!-- <property name="mappingResources"> -->
		<!-- <list> -->
		<!-- <value>cn/itcast/doamin/Book.hbm.xml</value> -->
		<!-- </list> -->
		<!-- </property> -->
		<!-- <property name="mappingLocations"> -->
		<!-- <list> -->
		<!-- <value>classpath:cn/itcast/doamin/Book.hbm.xml</value> -->
		<!-- </list> -->
		<!-- </property> -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:cn/itcast/domain</value>
			</list>
		</property>
	</bean>

	<!-- BookDAO -->
	<bean id="bookDAO" class="cn.itcast.dao.BookDAO">
		<!-- 注入SessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- BookService -->
	<bean id="bookService" class="cn.itcast.service.BookService">
		<property name="bookDAO" ref="bookDAO"></property>
	</bean>
	
	<!-- BookAction -->
	<bean id="bookAction" class="cn.itcast.web.action.BookAction" scope="prototype">
		<property name="bookService" ref="bookService"></property>
	</bean>
	
	<!-- 声明式事务管理 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<!-- 事务属性(隔离级别,传播属性) -->
		<tx:attributes>
			<tx:method name="save*"/>
			<tx:method name="delete*"/>
			<tx:method name="update*"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- Hibernate怎么开启事务:session.beginTransaction() -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 事务管理切面 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* cn.itcast.service..*.*(..))" id="txpointcut"/>
		<!-- 切面 -->
		<aop:advisor advice-ref="txadvice" pointcut-ref="txpointcut"/>
	</aop:config>
	
	

</beans>
	
	
	
	
	
	
	
